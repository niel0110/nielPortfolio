/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package genealogy_israel;

import java.io.BufferedReader;
import java.io.FileReader;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Niel Patick
 */
public class GenealogyTable extends javax.swing.JFrame {

    /**
     * Creates new form GenealogyTable
     */
    public GenealogyTable() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        genTable = new javax.swing.JTable();
        show = new javax.swing.JButton();
        YearsBelow = new javax.swing.JButton();
        YearsAbove = new javax.swing.JButton();
        BelowCreation = new javax.swing.JButton();
        AboveCreation = new javax.swing.JButton();
        back = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        genTable.setBackground(new java.awt.Color(204, 204, 204));
        genTable.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        genTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "GENERATION", "FATHER", "YEARS FROM CREATION", "AGE"
            }
        ));
        genTable.setShowGrid(true);
        jScrollPane1.setViewportView(genTable);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 40, 600, 260));

        show.setBorderPainted(false);
        show.setContentAreaFilled(false);
        show.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showActionPerformed(evt);
            }
        });
        getContentPane().add(show, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 340, 150, 40));

        YearsBelow.setBorderPainted(false);
        YearsBelow.setContentAreaFilled(false);
        YearsBelow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                YearsBelowActionPerformed(evt);
            }
        });
        getContentPane().add(YearsBelow, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 390, 160, 40));

        YearsAbove.setBorderPainted(false);
        YearsAbove.setContentAreaFilled(false);
        YearsAbove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                YearsAboveActionPerformed(evt);
            }
        });
        getContentPane().add(YearsAbove, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 390, 150, 40));

        BelowCreation.setBorderPainted(false);
        BelowCreation.setContentAreaFilled(false);
        BelowCreation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BelowCreationActionPerformed(evt);
            }
        });
        getContentPane().add(BelowCreation, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 430, 160, 50));

        AboveCreation.setBorderPainted(false);
        AboveCreation.setContentAreaFilled(false);
        AboveCreation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AboveCreationActionPerformed(evt);
            }
        });
        getContentPane().add(AboveCreation, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 430, 150, 50));

        back.setText("BACK");
        back.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });
        getContentPane().add(back, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 340, 70, 30));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/genealogy_israel/0002AAA.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
     try{
       String path = "C:\\Users\\Niel Patick\\Documents\\NetBeansProjects\\Genealogy_Israel\\src\\genealogy_israel\\genealogy_Israel.csv";
            BufferedReader reader = new BufferedReader(new FileReader(path));
            String line = reader.readLine(); // skip the first line
            while ((line = reader.readLine()) != null) {
                String[] parts = line.split(",");
                DefaultTableModel model = (DefaultTableModel) genTable.getModel();
                model.addRow(new Object[]{parts[0], parts[1], parts[2], parts[3]});
            }
            reader.close();
        } catch (Exception e){
            e.printStackTrace();
        }
        LinkedList.MakeEmpty();
        LinkedList.readFile();
    }//GEN-LAST:event_formWindowOpened

    private void showActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showActionPerformed
        DefaultTableModel model= (DefaultTableModel) genTable.getModel();
        model.setRowCount(0);
        
        for(int i = 0; i < LinkedList.size; i++){
            GenealogyChild gc = LinkedList.findbyIndex(i);
            if( gc.getallyearslived().equalsIgnoreCase("unknown") ||gc.getyearsfromcreation().equalsIgnoreCase("unknown")){
            }else{
                model.addRow(new Object[] {gc.getgeneration(), gc.getfather(), gc.getallyearslived(), gc.getyearsfromcreation()});
            }
        }
    }//GEN-LAST:event_showActionPerformed

    private void YearsBelowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_YearsBelowActionPerformed
        DefaultTableModel model= (DefaultTableModel) genTable.getModel();
        model.setRowCount(0);
        try{
             String path = "C:\\Users\\Niel Patick\\Documents\\NetBeansProjects\\Genealogy_Israel\\src\\genealogy_israel\\Below500Years.csv";
            BufferedReader reader = new BufferedReader(new FileReader(path));
            String line = reader.readLine(); // skip the first line
            while ((line = reader.readLine()) != null) {
                String[] parts = line.split(",");
                model.addRow(new Object[]{parts[0], parts[1], parts[2], parts[3]});
            }
            reader.close();
        } catch (Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_YearsBelowActionPerformed

    private void YearsAboveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_YearsAboveActionPerformed
         // TODO add your handling code here:
         DefaultTableModel model= (DefaultTableModel) genTable.getModel();
        model.setRowCount(0);
        try{
             String path = "C:\\Users\\Niel Patick\\Documents\\NetBeansProjects\\Genealogy_Israel\\src\\genealogy_israel\\Above500Years.csv";
            BufferedReader reader = new BufferedReader(new FileReader(path));
            String line = reader.readLine(); // skip the first line
            while ((line = reader.readLine()) != null) {
                String[] parts = line.split(",");
                model.addRow(new Object[]{parts[0], parts[1], parts[2], parts[3]});
            }
            reader.close();
        } catch (Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_YearsAboveActionPerformed

    private void BelowCreationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BelowCreationActionPerformed
        DefaultTableModel model= (DefaultTableModel) genTable.getModel();
        model.setRowCount(0);
        try{
             String path = "C:\\Users\\Niel Patick\\Documents\\NetBeansProjects\\Genealogy_Israel\\src\\genealogy_israel\\Below1000Years.csv";
            BufferedReader reader = new BufferedReader(new FileReader(path));
            String line = reader.readLine(); // skip the first line
            while ((line = reader.readLine()) != null) {
                String[] parts = line.split(",");
                model.addRow(new Object[]{parts[0], parts[1], parts[2], parts[3]});
            }
            reader.close();
        } catch (Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_BelowCreationActionPerformed

    private void AboveCreationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AboveCreationActionPerformed
        DefaultTableModel model= (DefaultTableModel) genTable.getModel();
        model.setRowCount(0);
        try{
             String path = "C:\\Users\\Niel Patick\\Documents\\NetBeansProjects\\Genealogy_Israel\\src\\genealogy_israel\\Above1000Years.csv";
            BufferedReader reader = new BufferedReader(new FileReader(path));
            String line = reader.readLine(); // skip the first line
            while ((line = reader.readLine()) != null) {
                String[] parts = line.split(",");
                model.addRow(new Object[]{parts[0], parts[1], parts[2], parts[3]});
            }
            reader.close();
        } catch (Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_AboveCreationActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        GenealogyMain back = new GenealogyMain();
        back.setVisible(true);
        
        dispose();
    }//GEN-LAST:event_backActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GenealogyTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GenealogyTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GenealogyTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GenealogyTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GenealogyTable().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AboveCreation;
    private javax.swing.JButton BelowCreation;
    private javax.swing.JButton YearsAbove;
    private javax.swing.JButton YearsBelow;
    private javax.swing.JButton back;
    private javax.swing.JTable genTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton show;
    // End of variables declaration//GEN-END:variables
}
